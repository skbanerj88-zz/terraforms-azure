# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '${build.ArtifactStagingDirectory}'
    CleanTargetFolder: true

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '${build.ArtifactStagingDirectory}'
    backendType: 'azurerm'
    backendServiceArm: 'My Service Connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'Terraform'
    backendAzureRmStorageAccountName: 'skbanerj88tf'
    backendAzureRmStorageAccountSku: 
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'qlAx5AZw9nJ0RVbQSrRKdQzoic2b0qqilmw3XtnEgdCs8FDSiV7UdYswBJXDmCY5c0iNALLX/PPQhpGqVpr9AQ=='

- task: Terraform@2
  inputs:
    TemplatePath: '${build.ArtifactStagingDirectory}'
    Arguments: 'plan'
    InstallTerraform: true
    UseAzureSub: false